// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Ping {
  id Int @id @default(autoincrement())
}

// This table represents the basic login data of an user. At the application level, we must make sure
// that for every user created, a profile table is created
model Users {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
  email    String   @unique
  profile  Profile?
}

// TO DO: Need to think about storing information like 2FA, stats and avatar.
model Profile {
  id          Int                  @id
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt()
  // This value stores the route to the avatar's location, so that later the MVC or an nginx instance can send it to the user.
  avatar      String               @default("/usr/share/avatar/default.jpg")
  user        Users                @relation(fields: [id], references: [id])
  // This field will not be added until work starts on the tournaments. For now is not valid.
  //tournaments Tournament_Players[]
}

// model Tournament {
//   id         String               @id @default(ulid())
//   startedAt  DateTime             @default(now())
//   finishedAt DateTime?
//   players    Tournament_Players[]
// }

// model Tournament_Players {
//   id           Int        @id
//   playerAlias  string
//   rank         Int
//   playerId     Int
//   tournamentId String
//   players      Profile    @relation(fields: [playerId], references: [id])
//   tournaments  Tournament @relation(fields: [tournamentId], references: [id])
// }
