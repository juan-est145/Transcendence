services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
      target: dev
    ports:
      - '8443:4343'
    depends_on:
      mvc:
        condition: service_healthy
  api:
    build: 
      context: ./API
      dockerfile: Dockerfile
      target: dev
    volumes:
      - ./API:/app
    ports:
      - '4343:4343'
      - '9320:9320'
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-fk", "https://localhost:4343/docs/json"]
      interval: 10s
      timeout: 5s
      retries: 5

  mvc:
    build:
      context: ./MVC
      dockerfile: Dockerfile
      target: dev
    volumes:
      - ./MVC:/app
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-fk", "https://localhost:4343/"]
      interval: 10s
      timeout: 5s
      retries: 5
    hostname: ponggame
    ports:
      - "8000:4343"
      - '9321:9320'
    depends_on:
      api:
        condition: service_healthy

prometheus:
  image: prom/prometheus:latest
  cpntainer_name: prometheus
  ports:
    - "9090:9090"
  volumes:
    - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    - prometheus-storage:/promethus
  command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--storage.tsdb.path=/prometheus'
    - '--web.console.libraries=/etc/prometheus/console_libraries'
    - '--web.console.libraries=/etc/prometheus/consoles'
    - '--web.enable-lifecycle'
  network:
    - lan
  depends_on:
    - api

grafana:
  image: grafana/grafana:latest
  container_name: grafana
  ports:
    - "3030:3030"
  enviroment: 
    - GF_SECURITY_ADMIN_PASSWORD=admin
    - GF_USERS_ALLOW_SIGN_UP=false
  volumes:
    - grafana-storage:/var/lib/grafana
    - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
  network:
    - lan
  depends_on:
    - prometheus

networks:
  lan:
    driver: bridge

volumes:
  prometheus-storage:
  grafana-storage: